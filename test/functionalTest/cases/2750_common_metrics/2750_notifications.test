# Copyright 2016 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notifications and Common Metrics

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print

--SHELL--

#
# 01. Make accumulator subscribe to everything
# 02. Create entity E1 - provoking a notification
# 03. Ask for metrics, see 1 outgoing transaction
# 04. Kill accumulator
# 05. Create entity E2 - provoking a notification that fails
# 06. Ask for metrics, see 2 outgoing transaction of which 1 failed
#
# NOTE
# Under valgrind, a GET /version is issued to the broker initially, to check it's alive.
# This "screws" the statistics a little (especially as the /version payload is big and not with a fixed size)
# and some REGEX have been necessary for this test to run both as normal functest and under valgrind
#
# An extra call to GET /version is done initially to make the metrics similar in func test and under valgrind
#


echo "00. GET /version"
echo "================"
orionCurl --url /version
echo
echo


echo "01. Make accumulator subscribe to everything"
echo "============================================"
payload='{
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    }
  },
  "subject": {
    "entities": [
      {
        "idPattern": ".*"
      }
    ]
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload" --servicePath /SP
echo
echo


echo "02. Create entity E1 - provoking a notification"
echo "==============================================="
payload='{
  "id": "E1",
  "A1": {
    "value": 1,
    "type": "a1"
  }
}'
orionCurl --url /v2/entities --payload "$payload" --servicePath /SP
echo
echo

valgrindSleep 1

echo "03. Ask for metrics, see 1 outgoing transaction"
echo "==============================================="
orionCurl --url /admin/metrics  --servicePath /SP/get/metrics
echo
echo


echo "04. Kill accumulator"
echo "===================="
accumulatorStop
echo
echo


echo "05. Create entity E2 - provoking a notification that fails"
echo "=========================================================="
payload='{
  "id": "E2",
  "A1": {
    "value": 1,
    "type": "a1"
  }
}'
orionCurl --url /v2/entities --payload "$payload" --servicePath /SP
echo
echo


echo "06. Ask for metrics, see 2 outgoing transaction of which 1 failed"
echo "================================================================="
orionCurl --url /admin/metrics
echo
echo


--REGEXPECT--
00. GET /version
================
HTTP/1.1 200 OK
Content-Length: REGEX(\d+)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "orion": {
        "compile_time": "REGEX(.*)",
        "compiled_by": "REGEX(.*)",
        "compiled_in": "REGEX(.*)",
        "doc": "REGEX(.*)",
        "git_hash": "REGEX(([0-9a-f]{40}|nogitversion))",
        "release_date": "REGEX(.*)",
        "uptime": "REGEX(.*)",
        "version": "REGEX(.*)"
    }
}


01. Make accumulator subscribe to everything
============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create entity E1 - provoking a notification
===============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Ask for metrics, see 1 outgoing transaction
===============================================
HTTP/1.1 200 OK
Content-Length: REGEX(\d+)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "services": {
        "default-service": {
            "subservs": {
                "SP": {
                    "incomingTransactionRequestSize": 177,
                    "incomingTransactions": 2,
                    "outgoingTransactionRequestSize": 124,
                    "outgoingTransactions": 1,
                    "serviceTime": REGEX(.*)
                },
                "root-subserv": {
                    "incomingTransactionResponseSize": REGEX(\d+),
                    "incomingTransactions": REGEX((1|2)),
                    "serviceTime": REGEX(.*)
                }
            },
            "sum": {
                "incomingTransactionRequestSize": 177,
                "incomingTransactionResponseSize": REGEX(\d+),
                "incomingTransactions": REGEX((3|4)),
                "outgoingTransactionRequestSize": 124,
                "outgoingTransactions": 1,
                "serviceTime": REGEX(.*)
            }
        }
    },
    "sum": {
        "subservs": {
            "SP": {
                "incomingTransactionRequestSize": 177,
                "incomingTransactions": 2,
                "outgoingTransactionRequestSize": 124,
                "outgoingTransactions": 1,
                "serviceTime": REGEX(.*)
            },
            "root-subserv": {
                "incomingTransactionResponseSize": REGEX(\d+),
                "incomingTransactions": REGEX((1|2)),
                "serviceTime": REGEX(.*)
            }
        },
        "sum": {
            "incomingTransactionRequestSize": 177,
            "incomingTransactionResponseSize": REGEX(\d+),
            "incomingTransactions": REGEX((3|4)),
            "outgoingTransactionRequestSize": 124,
            "outgoingTransactions": 1,
            "serviceTime": REGEX(.*)
        }
    }
}


04. Kill accumulator
====================


05. Create entity E2 - provoking a notification that fails
==========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E2?type=Thing
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Ask for metrics, see 2 outgoing transaction of which 1 failed
=================================================================
HTTP/1.1 200 OK
Content-Length: REGEX(\d+)
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "services": {
        "default-service": {
            "subservs": {
                "SP": {
                    "incomingTransactionRequestSize": 227,
                    "incomingTransactions": 3,
                    "outgoingTransactionErrors": 1,
                    "outgoingTransactionRequestSize": 248,
                    "outgoingTransactions": 2,
                    "serviceTime": REGEX(.*)
                },
                "SP/get/metrics": {
                    "incomingTransactionResponseSize": REGEX(\d+),
                    "incomingTransactions": 1,
                    "serviceTime": REGEX(.*)
                },
                "root-subserv": {
                    "incomingTransactionResponseSize": REGEX(\d+),
                    "incomingTransactions": REGEX((1|2)),
                    "serviceTime": REGEX(.*)
                }
            },
            "sum": {
                "incomingTransactionRequestSize": 227,
                "incomingTransactionResponseSize": REGEX(\d+),
                "incomingTransactions": REGEX((5|6)),
                "outgoingTransactionErrors": 1,
                "outgoingTransactionRequestSize": 248,
                "outgoingTransactions": 2,
                "serviceTime": REGEX(.*)
            }
        }
    },
    "sum": {
        "subservs": {
            "SP": {
                "incomingTransactionRequestSize": 227,
                "incomingTransactions": 3,
                "outgoingTransactionErrors": 1,
                "outgoingTransactionRequestSize": 248,
                "outgoingTransactions": 2,
                "serviceTime": REGEX(.*)
            },
            "SP/get/metrics": {
                "incomingTransactionResponseSize": REGEX(\d+),
                "incomingTransactions": 1,
                "serviceTime": REGEX(.*)
            },
            "root-subserv": {
                "incomingTransactionResponseSize": REGEX(\d+),
                "incomingTransactions": REGEX((1|2)),
                "serviceTime": REGEX(.*)
            }
        },
        "sum": {
            "incomingTransactionRequestSize": 227,
            "incomingTransactionResponseSize": REGEX(\d+),
            "incomingTransactions": REGEX((5|6)),
            "outgoingTransactionErrors": 1,
            "outgoingTransactionRequestSize": 248,
            "outgoingTransactions": 2,
            "serviceTime": REGEX(.*)
        }
    }
}


--TEARDOWN--
brokerStop CB
dbDrop CB
dbDrop s1
dbDrop s2
dbDrop s3
